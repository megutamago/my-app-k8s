- name: shell
  shell: kubeadm config images pull

- name: shell
  shell: curl -sS https://webinstall.dev/k9s | bash

- name: shell
  shell: echo "source ~/.config/envman/PATH.env" >> ~/.bashrc

- name: shell
  shell: rm -rf ~/Downloads

# KUBEADM_BOOTSTRAP_TOKEN=$(openssl rand -hex 3).$(openssl rand -hex 8)

- name: Execute init
  shell: kubeadm init --config ~/init_kubeadm.yaml --skip-phases=addon/kube-proxy
  register: result
  changed_when: false
- name: Show stdout init
  debug:
    msg: "{{ result.stdout_lines }}"

- name: file
  file:
    path: ~/.kube
    state: directory
    recurse: yes
    owner: root
    group: root

- name: copy
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    owner: root
    group: root
    mode: '0644'
    remote_src: true
  ignore_errors: yes

- name: shell
  shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

- name: shell
  shell: helm repo add cilium https://helm.cilium.io/

- name: Execute helm
  shell: |
    helm install cilium cilium/cilium \
        --version 1.15.0-pre.2 \
        --namespace kube-system \
        --set k8sServiceHost={{ KUBE_API_SERVER_VIP }} \
        --set k8sServicePort=8443 \
        --set hubble.enabled=true \
        --set hubble.relay.enabled=true \
        --set hubble.ui.enabled=true
  register: result
  changed_when: false
- name: Show stdout helm
  debug:
    msg: "{{ result.stdout_lines }}"

- name: shell
  shell: kubectl create namespace metallb

- name: shell
  shell: kubectl apply -k ~/

- name: shell
  shell: helm repo add argo https://argoproj.github.io/argo-helm

- name: Execute helm
  shell: |
    helm install argocd argo/argo-cd \
        --version 5.51.4 \
        --create-namespace \
        --namespace argocd \
        --values https://raw.githubusercontent.com/megutamago/my-app-k8s/{{ TARGET_BRANCH }}/k8s-manifests/argocd-helm-chart-values.yaml
  register: result
  changed_when: false
- name: Show stdout helm
  debug:
    msg: "{{ result.stdout_lines }}"

- name: Execute helm
  shell: |
    helm install argocd argo/argocd-apps \
        --version 1.4.1 \
        --values https://raw.githubusercontent.com/megutamago/my-app-k8s/{{ TARGET_BRANCH }}/k8s-manifests/argocd-apps-helm-chart-values.yaml
  register: result
  changed_when: false
- name: Show stdout helm
  debug:
    msg: "{{ result.stdout_lines }}"

# KUBEADM_UPLOADED_CERTS=$(kubeadm init phase upload-certs --upload-certs | tail -n 1)

- name: copy
  copy:
    src: ./files/cp/join_kubeadm_cp.yaml
    dest: ~/
    owner: root
    group: root
    mode: '0644'
  ignore_errors: yes

- name: replace
  replace:
    path: ~/join_kubeadm_cp.yaml
    regexp: '\$\{KUBE_API_SERVER_VIP\}'
    replace: "{{ KUBE_API_SERVER_VIP }}"

- name: replace
  replace:
    path: ~/join_kubeadm_cp.yaml
    regexp: '\$\{KUBEADM_BOOTSTRAP_TOKEN\}'
    replace: "{{ KUBEADM_BOOTSTRAP_TOKEN }}"

- name: replace
  replace:
    path: ~/join_kubeadm_cp.yaml
    regexp: '\$\{KUBEADM_UPLOADED_CERTS\}'
    replace: "{{ KUBEADM_UPLOADED_CERTS }}"

- name: copy
  copy:
    src: ./files/cp/join_kubeadm_wk.yaml
    dest: ~/
    owner: root
    group: root
    mode: '0644'
  ignore_errors: yes

- name: replace
  replace:
    path: ~/join_kubeadm_wk.yaml
    regexp: '\$\{KUBE_API_SERVER_VIP\}'
    replace: "{{ KUBE_API_SERVER_VIP }}"

- name: replace
  replace:
    path: ~/join_kubeadm_wk.yaml
    regexp: '\$\{KUBEADM_BOOTSTRAP_TOKEN\}'
    replace: "{{ KUBEADM_BOOTSTRAP_TOKEN }}"

- name: mv yaml
  shell: mv ~/*.yaml ~/work

- name: fetch joinfile cp
  fetch:
    src: "~/work/join_kubeadm_cp.yaml"
    dest: "./files/k8s/fetch/"
    flat: yes

- name: fetch joinfile wk
  fetch:
    src: "~/work/join_kubeadm_wk.yaml"
    dest: "./files/k8s/fetch/"
    flat: yes

- name: set bashrc
  lineinfile:
    dest: ~/.bashrc
    insertafter: EOF
    line: '{{ item }}'
  with_items:
  - source <(kubectl completion bash)
  - alias k='kubectl'
  - complete -F __start_kubectl k
  - alias kcv='kubectl config view -o jsonpath='{.users[*].name}''
  - alias kgn='kubectl get node -A'
  - alias kgp='kubectl get pod -A'
  - alias kgpw='kubectl get pod -A -o wide'
  - alias kgs='kubectl get svc -A'
  - alias kgd='kubectl get deployment -A'
  - alias kgstate='kubectl get statefulset -A'
  - alias kgsc='kubectl get storageclass -A'
  - alias kgname='kubectl get namespace -A'
  - alias kak='kubectl apply -k ./'
  - alias kd='kubectl describe'