apiVersion: v1
kind: Service
metadata:
  name: grafana-lb
  namespace: grafana
spec:
  ports:
  - name: http-web
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
  type: LoadBalancer
  loadBalancerIP: 192.168.11.141
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.61.2
    helm:
      releaseName: grafana
      values: |
        adminUser: grafana
        adminPassword: grafana
        datasources:
          datasources1.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              uid: Prometheus
              access: proxy
              orgId: 1
              url: http://prometheus-kube-prometheus-prometheus.monitoring:9090
              basicAuth: false
              version: 1
              editable: false
              jsonData:
                httpMethod: POST
                manageAlerts: true
                prometheusType: Prometheus
          datasources2.yaml:
            apiVersion: 1
            datasources:
            - name: Loki
              type: loki
              uid: Loki
              access: proxy
              orgId: 1
              url: http://loki-gateway.logging
              basicAuth: false
              version: 1
              editable: false
              jsonData:
                maxLines: 1000
                derivedFields:
                  - datasourceUid: 'Tempo'
                    matcherRegex: '"request_X-B3-Traceid":"(\w+)"'
                    name: TraceID
                    url: $${__value.raw}
          datasources3.yaml:
            apiVersion: 1
            datasources:
            - name: Tempo
              type: tempo
              uid: Tempo
              access: proxy
              orgId: 1
              url: http://tempo-distributed-query-frontend.tracing:3100
              basicAuth: false
              version: 1
              editable: false
              jsonData:
                httpMethod: GET
                tracesToLogs:
                  datasourceUid: 'Loki'
                  tags: ['job', 'instance', 'pod', 'namespace']
                  mappedTags: [{ key: 'service.name', value: 'service' }]
                  mapTagNamesEnabled: false
                  spanStartTimeShift: '1h'
                  spanEndTimeShift: '1h'
                  filterByTraceID: false
                  filterBySpanID: false
                tracesToMetrics:
                  datasourceUid: 'Prometheus'
                  tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
                  queries:
                    - name: 'Sample query'
                      query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
                serviceMap:
                  datasourceUid: 'Prometheus'
                search:
                  hide: false
                nodeGraph:
                  enabled: true
                lokiSearch:
                  datasourceUid: 'Loki'
        dashboards:
          default:
            prometheus-stats:
              gnetId: 2
              revision: 2
              datasource: Prometheus
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: grafana
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true